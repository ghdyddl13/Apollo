<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- 프로젝트 기본 정보(비 기술적 정보) -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.apollo</groupId> <!-- 구분자로 사용 -->
    <artifactId>Apollo</artifactId> <!-- 구분자 & 회사이름 -->
    <name>Apollo</name><!-- 프로젝트 이름 -->
    <packaging>war</packaging>
    <version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.6</java-version> <!-- 사용 자바 버전 -->
       
        <!-- 사용 스프링 프레임워크 버전 정보 -->
		<org.springframework-version>4.2.5.RELEASE</org.springframework-version>
		
        <!-- PARC에서 개발한 자바 프로그래밍 언어용 관점 지향 프로그래밍 (AOP) 확장 기능 -->
        <org.aspectj-version>1.6.10</org.aspectj-version>
		
        <!-- 로깅 관련 모듈 -->
        <org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>

    <!-- orcle 저작권 문제해결 위해 oracle repository 설정 -->
    <!-- 아래에서 dependency로 oracle jdbc 부르기 위한 선행 작업-->
	<repositories> 
     <repository> 
         <id>oracle</id> 
         <name>ORACLE JDBC Repository</name> 
         <url>http://maven.jahia.org/maven2</url> 
      </repository>
      
     <repository>
		<id>mesir-repo</id>
		<url>http://mesir.googlecode.com/svn/trunk/mavenrepo</url>
	</repository>
	</repositories> 
    <!-- 의존 주입 -->
	<dependencies>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>

            <!-- 위 properties에서 만든 org.sp~-version을 call -->
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>

        <!-- spring web MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
	
        <!-- 위 dependency들은 기본 생성 Spring Legacy project 기본 생성 dependency-->
        <!-- 아래부터는 자주 쓰는 dependency를 추가 한 것 -->
		

		
		<!-- websocket -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>4.3.1.RELEASE</version>
		</dependency>
		<!--OJDBC6  -->
		<dependency> 
	     	<groupId>com.oracle</groupId> 
	     	<artifactId>ojdbc6</artifactId> 
	     	<version>12.1.0.1</version> 
	     	<scope>runtime</scope> 
		</dependency>

		
        <!-- Tiles -->
		<dependency>
    		<groupId>org.apache.tiles</groupId>
    		<artifactId>tiles-core</artifactId>
    		<version>2.2.2</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.tiles</groupId>
    		<artifactId>tiles-jsp</artifactId>
    		<version>2.2.2</version>
		</dependency>
		
        <!-- JSP UI JSTL LIB -->
		<dependency>
    		<groupId>javax.servlet</groupId>
    		<artifactId>jstl</artifactId>
    		<version>1.2</version>
		</dependency>
        
        <!-- Spring Mybatis 사용 -->
		<dependency>
  			<groupId>org.mybatis</groupId>
  			<artifactId>mybatis</artifactId>
  			<version>3.1.1</version>
  		</dependency>
    	<dependency>
  			<groupId>org.mybatis</groupId>
  			<artifactId>mybatis-spring</artifactId>
  			<version>1.2.2</version>
  		</dependency>
  		
  		
	
 		<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.7.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>1.9.13</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.7.3</version>
        </dependency>

	<!-- Spring Security -->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>4.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>4.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>4.0.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
			
		<!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.7</version>
         <scope>test</scope>
      </dependency>     
      
      <!-- 메일 발송 지원 기능 포함 -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>${org.springframework-version}</version>
      </dependency>
      
      <!-- Java Mail API -->
      <dependency>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
          <version>1.4.3</version>
      </dependency>   
      
      <!-- Velocity 설정 -->
      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity</artifactId>
          <version>1.7</version>
      </dependency>
      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity-tools</artifactId>
          <version>2.0</version>
      </dependency>
      <dependency>
          <groupId>velocity</groupId>
          <artifactId>velocity-dep</artifactId>
          <version>1.4</version>
      </dependency>

		<!-- 구글아이디연동 -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-google</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>
	
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
		</dependency>
		
		<!--AWS  -->
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk</artifactId>
		    <version>1.11.358</version>
		</dependency>

		<!-- File Upload 작업 -->
		<dependency>
    		<groupId>commons-fileupload</groupId>
    		<artifactId>commons-fileupload</artifactId>
    		<version>1.2.1</version>
		</dependency>
		<!-- File 쓰기 작업 -->
		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>servlets.com</groupId>
			<artifactId>cos</artifactId>
			<version>05Nov2002</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<!-- 엑셀 추출 -->
		<dependency>
		 <groupId>org.apache.poi</groupId>
		 <artifactId>poi</artifactId>
		 <version>3.7</version>
		</dependency>    
		
		<dependency>
		 <groupId>org.apache.poi</groupId>
		 <artifactId>poi-ooxml</artifactId>
		 <version>3.7</version>
		</dependency>
		       
	</dependencies>



    <build>
        <plugins>

            <!-- Maven 사용을 위한 plug-in -->
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <!-- Maven 사용을 위한 plug-in -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
            <!-- 메이븐을 통한 서버 배포 -->    
            <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-war-plugin</artifactId>
		        <version>2.4</version>
		        <configuration>
		            <warsourcedirectory>src/main/webapp</warsourcedirectory>
		            <webxml>src/main/webapp/WEB-INF/web.xml</webxml>
		            <failOnMissingWebXml>false</failOnMissingWebXml>
		        </configuration>
		    </plugin>
		 
		    <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>tomcat-maven-plugin</artifactId>
		        <version>1.1</version>
		        <configuration>
		            <url>http://52.79.251.197:8080/manager/text</url>
		            <path>/Apollo</path>
		            <username>projectapollo</username>
		            <password>apollo1004</password>
		        </configuration>
		    </plugin>


        </plugins>

    </build>
</project>