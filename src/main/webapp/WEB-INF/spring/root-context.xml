<?xml version="1.0" encoding="UTF-8"?>
<!-- 네임스페이스 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context는 모든 웹 컴포넌트에서 공유될 수 있는 자원을 정의하는 공간이다 -->	
    <!-- jdbc 자원을 bean으로 선언하고 접속 환경을 구성 -->
    <!-- AWS RDBS  -->
 <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />

      
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
        <property name="username" value="Apollo " />
        <property name="password" value="1004" /> 
 	
 
<!--         <property name="url" value="jdbc:oracle:thin:@apollodb.c8laekrmeaob.ap-northeast-2.rds.amazonaws.com:1521:APOLLODB" />
        <property name="username" value="PROJECT_APOLLO_AWS" />
        <property name="password" value="apollo1004" />   -->

    </bean>
    <!-- Mybatis 사용을 위한 Bean 설정으로 pom.xml에서 dependency 설정을 이미 했기에 가능 -->
    <bean id="sqlSessionFactoryBean"  class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="driverManagerDataSource"></property>
        
        <!-- mapper 설정으로 경로를 반드시 정확하게 지정해주어야 한다 -->

        <property name="mapperLocations" value="classpath*:com/apollo/mapper/*xml" />

    </bean> 
    <!-- Mybatis 사용을 위한 Bean 설정으로 pom.xml에서 dependency 설정을 이미 했기에 가능 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
	</bean>

    <!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="apolloyy104@gmail.com" />
		<property name="password" value="apollo104" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	<bean name="jsonview" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<constructor-arg value="494812049975-fuja6bh2piv0mb5svuil2rq5midfq4a6.apps.googleusercontent.com" />
		<constructor-arg value="rx5MSCc_xPnjaElzD0AgUpZ-" />
	</bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope"
			value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email" />
		<property name="redirectUri"
			value="http://projectapollo.site/Apollo/googlelogin.htm" />
	</bean>
	 <!-- 파일 업로드 지원 LIB -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
	  		<property name="maxUploadSize" value="10485760"/>
	</bean>	
</beans>
